"use strict";(self.webpackChunknextradocs=self.webpackChunknextradocs||[]).push([[957],{3471:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var t=n(4848),s=n(8453);const a={sidebar_position:5},r="Password Authentication",l={id:"tutorials/authentication/password",title:"Password Authentication",description:"This guide explains how to implement and customize email/password authentication in your application. The starter kit provides a complete authentication system with email verification support.",source:"@site/docs/tutorials/authentication/password.mdx",sourceDirName:"tutorials/authentication",slug:"/tutorials/authentication/password",permalink:"/docs/tutorials/authentication/password",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"OAuth Providers",permalink:"/docs/tutorials/authentication/oauth"},next:{title:"Two-Factor Authentication",permalink:"/docs/tutorials/authentication/2fa"}},o={},c=[{value:"Overview",id:"overview",level:2},{value:"Client-Side Authentication",id:"client-side-authentication",level:2},{value:"Sign Up Flow",id:"sign-up-flow",level:3},{value:"Sign In Process",id:"sign-in-process",level:3},{value:"Email Verification",id:"email-verification",level:2},{value:"Enable Verification",id:"enable-verification",level:3},{value:"Manual Verification Control",id:"manual-verification-control",level:3},{value:"Password Reset",id:"password-reset",level:2},{value:"Request Reset",id:"request-reset",level:3},{value:"Complete Reset",id:"complete-reset",level:3},{value:"Security Options",id:"security-options",level:2}];function d(e){const i={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.h1,{id:"password-authentication",children:"Password Authentication"}),"\n",(0,t.jsx)(i.p,{children:"This guide explains how to implement and customize email/password authentication in your application. The starter kit provides a complete authentication system with email verification support."}),"\n",(0,t.jsx)(i.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsx)(i.p,{children:"Built-in features include:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"Sign up with automatic email verification"}),"\n",(0,t.jsx)(i.li,{children:"Sign in with email/password"}),"\n",(0,t.jsx)(i.li,{children:"Password reset functionality"}),"\n",(0,t.jsx)(i.li,{children:"Customizable email templates"}),"\n",(0,t.jsx)(i.li,{children:"Rate limiting and security features"}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"client-side-authentication",children:"Client-Side Authentication"}),"\n",(0,t.jsxs)(i.p,{children:["Authentication utilities are located in ",(0,t.jsx)(i.code,{children:"src/lib/auth-utils.ts"})]}),"\n",(0,t.jsxs)(i.admonition,{title:"Callback URLs",type:"info",children:[(0,t.jsxs)(i.p,{children:["You can customize authentication callback URLs by modifying the ",(0,t.jsx)(i.code,{children:"callbackUrls"})," object in ",(0,t.jsx)(i.code,{children:"src/lib/auth-utils.ts"}),":"]}),(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"afterSignIn"}),": Redirect after successful sign in"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"afterSignUp"}),": Redirect after registration"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"verifyEmail"}),": Email verification page"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"resetPassword"}),": Password reset page"]}),"\n"]})]}),"\n",(0,t.jsx)(i.p,{children:"First, import the required dependencies:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-typescript",children:'import { authClient } from "better-auth/client";\n'})}),"\n",(0,t.jsx)(i.h3,{id:"sign-up-flow",children:"Sign Up Flow"}),"\n",(0,t.jsxs)(i.p,{children:["The sign up functionality is defined in ",(0,t.jsx)(i.code,{children:"src/lib/auth-utils.ts"}),":"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-typescript",children:"const signUp = async ({ email, password, name }) => {\n    const result = await authClient.signUp({\n        email,\n        password,\n        data: { name }\n    });\n    \n    if (result.success) {\n        // User created successfully\n        // If email verification is enabled:\n        // - Verification email is automatically sent\n        // - User needs to verify email before signing in\n        // - Redirect to verification pending page\n    }\n};\n"})}),"\n",(0,t.jsx)(i.h3,{id:"sign-in-process",children:"Sign In Process"}),"\n",(0,t.jsxs)(i.p,{children:["The sign in process is handled in ",(0,t.jsx)(i.code,{children:"src/lib/auth-utils.ts"}),":"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-typescript",children:"const signIn = async ({ email, password }) => {\n    const result = await authClient.signIn({\n        email,\n        password\n    });\n\n    if (result.success) {\n        // User authenticated\n        if (result.emailVerified) {\n            // Redirect to dashboard\n        } else {\n            // Show verification required message\n            // Option to resend verification email\n        }\n    }\n};\n"})}),"\n",(0,t.jsx)(i.h2,{id:"email-verification",children:"Email Verification"}),"\n",(0,t.jsx)(i.h3,{id:"enable-verification",children:"Enable Verification"}),"\n",(0,t.jsxs)(i.p,{children:["Configure email verification in ",(0,t.jsx)(i.code,{children:"src/lib/auth.ts"}),":"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-typescript",children:"export const auth = betterAuth({\n    emailAndPassword: {\n        enabled: true,\n        requireEmailVerification: true, // Make email verification mandatory\n        verificationEmailTimeout: 24 * 60 * 60, // 24 hours\n    }\n});\n"})}),"\n",(0,t.jsx)(i.h3,{id:"manual-verification-control",children:"Manual Verification Control"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-typescript",children:"// Resend verification email\nconst resendVerification = async (email) => {\n    await authClient.sendVerificationEmail({ email });\n};\n\n// Check verification status\nconst checkVerification = async () => {\n    const status = await authClient.getVerificationStatus();\n    return status.verified;\n};\n"})}),"\n",(0,t.jsx)(i.admonition,{type:"tip",children:(0,t.jsxs)(i.p,{children:["For email template customization and advanced email settings, see the ",(0,t.jsx)(i.a,{href:"./email-configuration",children:"Email Configuration"})," guide."]})}),"\n",(0,t.jsx)(i.h2,{id:"password-reset",children:"Password Reset"}),"\n",(0,t.jsx)(i.h3,{id:"request-reset",children:"Request Reset"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-typescript",children:"const requestPasswordReset = async (email) => {\n    await authClient.sendResetEmail({ email });\n    // User receives reset instructions via email\n};\n"})}),"\n",(0,t.jsx)(i.h3,{id:"complete-reset",children:"Complete Reset"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-typescript",children:"const resetPassword = async ({ token, newPassword }) => {\n    const result = await authClient.resetPassword({\n        token,\n        password: newPassword\n    });\n\n    if (result.success) {\n        // Password updated successfully\n        // User can now sign in with new password\n    }\n};\n"})}),"\n",(0,t.jsx)(i.h2,{id:"security-options",children:"Security Options"}),"\n",(0,t.jsxs)(i.p,{children:["Configure security settings in ",(0,t.jsx)(i.code,{children:"src/lib/auth.ts"}),":"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-typescript",children:"export const auth = betterAuth({\n    emailAndPassword: {\n        minimumPasswordLength: 8,\n        passwordStrengthCheck: true,\n        loginRateLimit: {\n            window: 15 * 60, // 15 minutes\n            max: 5 // attempts\n        },\n        resetPasswordTimeout: 60 * 60, // 1 hour\n    }\n});\n"})}),"\n",(0,t.jsxs)(i.admonition,{title:"Development Testing",type:"tip",children:[(0,t.jsx)(i.p,{children:"For local development:"}),(0,t.jsxs)(i.ol,{children:["\n",(0,t.jsxs)(i.li,{children:["Use ",(0,t.jsx)(i.a,{href:"https://mailtrap.io",children:"Mailtrap"})," to catch all outgoing emails"]}),"\n",(0,t.jsxs)(i.li,{children:["Set ",(0,t.jsx)(i.code,{children:"allowUnverifiedLogin: true"})," temporarily to bypass email verification"]}),"\n",(0,t.jsx)(i.li,{children:"Check your server logs for email content and verification links"}),"\n"]})]}),"\n",(0,t.jsxs)(i.admonition,{title:"Security Note",type:"warning",children:[(0,t.jsx)(i.p,{children:"In production:"}),(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"Always enable email verification"}),"\n",(0,t.jsx)(i.li,{children:"Use secure SMTP settings"}),"\n",(0,t.jsx)(i.li,{children:"Set appropriate rate limits"}),"\n",(0,t.jsx)(i.li,{children:"Implement proper error handling"}),"\n"]})]})]})}function u(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>r,x:()=>l});var t=n(6540);const s={},a=t.createContext(s);function r(e){const i=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(a.Provider,{value:i},e.children)}}}]);